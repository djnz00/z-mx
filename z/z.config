#!/bin/sh

usage() {
cat << EOF
Usage: z.config [OPTIONS] PREFIX

Options:
    -a ARCH	specify architecture (default: x86-64-v3)
    -L		use clang / llvm
    -c		force re-configure
    -d		debug build (default: release) 
    -D		address sanitizer build ('')
    -M		build for MinGW-w64
    -l		pass --enable-libtool-lock to configure
    -G		build without Gtk
    -P		build without PostgreSQL
EOF
}

ARCH="x86-64-v2"
OPREFIX=
CLANG=0
CONFIG=0
DEBUG=0
MINGW=0
LIBTOOL_LOCK=""
GTK="yes"
PQ="yes"

while getopts "a:k:LcdDMlGPh" arg
do case $arg in
  a) ARCH=$OPTARG;;
  L) CLANG=1;;
  c) CONFIG=1;;
  d) DEBUG=1;;
  D) DEBUG=2; CLANG=1;;
  M) MINGW=1;;
  l) LIBTOOL_LOCK="--enable-libtool-lock";;
  G) GTK="no";;
  P) PQ="no";;
  h) usage; exit 0;;
esac; done
shift $(($OPTIND - 1))

PREFIX=$1
[ -z "$PREFIX" ] && { usage; exit 1; }

OPTFLAGS="-fno-math-errno -fno-trapping-math -fno-rounding-math -fno-signaling-nans"

if [ $DEBUG -eq 1 ]; then
  OPTFLAGS="-g -march=$ARCH $OPTFLAGS"
  FLAGS="-DZDEBUG"
elif [ $DEBUG -eq 2 ]; then
  OPTFLAGS="-march=$ARCH -O1 -g -fsanitize=address -fno-omit-frame-pointer -fno-optimize-sibling-calls $OPTFLAGS"
  FLAGS="-DZDEBUG"
else
  OPTFLAGS="-march=$ARCH -O3 -g $OPTFLAGS"
  FLAGS="-DNDEBUG"
fi

[ $MINGW -eq 1 ] && {
  OPTFLAGS="$OPTFLAGS -mstackrealign"
  FLAGS="$FLAGS -DUNICODE -fuse-ld=lld"
  BUILD="--build=x86_64-w64-mingw32"
}

[ $CONFIG -eq 1 ] && {
  touch configure.ac
  [ $MINGW -eq 1 ] && {
    libtoolize --copy --force
    patch -p0 <libtool.m4.mingw_patch
  }
  autoreconf -i
}

FLAGS="$OPTFLAGS $FLAGS"

if [ $CLANG -eq 1 ]; then
  # clang
  WFLAGS="-Wno-empty-body -Wno-unknown-warning-option -Wno-ignored-optimization-argument -Wno-unused-private-field -Wno-varargs -Wno-deprecated-enum-compare -Wno-deprecated-anon-enum-enum-conversion -Wno-defaulted-function-deleted -Wno-unused-function -Wno-int-in-bool-context"
  FLAGS="$WFLAGS $FLAGS"
  CFLAGS="$FLAGS"
  CXXFLAGS="-std=gnu++20 -fno-aligned-allocation -ftemplate-backtrace-limit=0 -Wno-deprecated-enum-enum-conversion $FLAGS"
  if [ $DEBUG -eq 2 ]; then
    LDFLAGS="-fsanitize=address -lm"
  else
    LDFLAGS="-lm"
  fi
  ./configure $BUILD "--disable-static" "--prefix=$PREFIX" "--with-pq=$PQ" "--with-gtk=$GTK" "CC=clang" "CXX=clang++" "CFLAGS=$CFLAGS" "CXXFLAGS=$CXXFLAGS" "LDFLAGS=$LDFLAGS" "$LIBTOOL_LOCK"
else
  # gcc
  WFLAGS="-Wno-sign-compare"
  CFLAGS="$FLAGS $WFLAGS"
  CXXFLAGS="-std=gnu++20 -ftemplate-backtrace-limit=0 $FLAGS -Wno-non-template-friend -Wno-enum-compare -Wno-deprecated-enum-enum-conversion -Wno-int-in-bool-context -Wno-unused-value $WFLAGS"
  ./configure $BUILD "--disable-static" "--prefix=$PREFIX" "--with-pq=$PQ" "--with-gtk=$GTK" "CFLAGS=$FLAGS" "CXXFLAGS=$CXXFLAGS" "$LIBTOOL_LOCK"
fi
