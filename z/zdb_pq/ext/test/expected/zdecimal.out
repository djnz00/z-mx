SELECT - '42.01'::zdecimal;
 ?column? 
----------
 -42.01
(1 row)

SELECT - '0'::zdecimal;
 ?column? 
----------
 0
(1 row)

SELECT - 'nan'::zdecimal;
 ?column? 
----------
 NaN
(1 row)

SELECT '42.01'::zdecimal;
 zdecimal 
----------
 42.01
(1 row)

SELECT '-42.01'::zdecimal;
 zdecimal 
----------
 -42.01
(1 row)

SELECT ''::zdecimal;
ERROR:  invalid input syntax for zdecimal: ""
LINE 1: SELECT ''::zdecimal;
               ^
SELECT 'x'::zdecimal;
ERROR:  invalid input syntax for zdecimal: "x"
LINE 1: SELECT 'x'::zdecimal;
               ^
SELECT '42 x'::zdecimal;
ERROR:  invalid input syntax for zdecimal: "42 x"
LINE 1: SELECT '42 x'::zdecimal;
               ^
SELECT - '999999999999999999.999999999999999999'::zdecimal;
                ?column?                
----------------------------------------
 -999999999999999999.999999999999999999
(1 row)

SELECT  '-999999999999999999.999999999999999999'::zdecimal;
                zdecimal                
----------------------------------------
 -999999999999999999.999999999999999999
(1 row)

SELECT   '999999999999999999.999999999999999999'::zdecimal;
               zdecimal                
---------------------------------------
 999999999999999999.999999999999999999
(1 row)

SELECT - '100000000000000000.000000000000000001'::zdecimal;
                ?column?                
----------------------------------------
 -100000000000000000.000000000000000001
(1 row)

SELECT  '-100000000000000000.000000000000000001'::zdecimal;
                zdecimal                
----------------------------------------
 -100000000000000000.000000000000000001
(1 row)

SELECT   '100000000000000000.000000000000000001'::zdecimal;
               zdecimal                
---------------------------------------
 100000000000000000.000000000000000001
(1 row)

SELECT - '1000000000000000000.000000000000000001'::zdecimal;
ERROR:  invalid input syntax for zdecimal: "1000000000000000000.000000000000000001"
LINE 1: SELECT - '1000000000000000000.000000000000000001'::zdecimal;
                 ^
SELECT  '-1000000000000000000.000000000000000001'::zdecimal;
ERROR:  invalid input syntax for zdecimal: "-1000000000000000000.000000000000000001"
LINE 1: SELECT  '-1000000000000000000.000000000000000001'::zdecimal;
                ^
SELECT   '1000000000000000000.000000000000000001'::zdecimal;
ERROR:  invalid input syntax for zdecimal: "1000000000000000000.000000000000000001"
LINE 1: SELECT   '1000000000000000000.000000000000000001'::zdecimal;
                 ^
SELECT zdecimal_sum(NULL::zdecimal, NULL::zdecimal);
 zdecimal_sum 
--------------
 
(1 row)

SELECT zdecimal_sum(NULL::zdecimal, 1::zdecimal);
 zdecimal_sum 
--------------
 1
(1 row)

SELECT zdecimal_sum(2::zdecimal, NULL::zdecimal);
 zdecimal_sum 
--------------
 2
(1 row)

SELECT zdecimal_sum(2::zdecimal, 1::zdecimal);
 zdecimal_sum 
--------------
 3
(1 row)

SELECT sum(val::zdecimal) FROM (SELECT NULL::zdecimal WHERE false) _ (val);
 sum 
-----
 
(1 row)

SELECT sum(val::zdecimal) FROM (VALUES (1), (null), (2), (5)) _ (val);
 sum 
-----
 8
(1 row)

SELECT avg(val::zdecimal) FROM (SELECT NULL::zdecimal WHERE false) _ (val);
 avg 
-----
 
(1 row)

SELECT avg(val::zdecimal) FROM (VALUES (1), (null), (2), (5), (6)) _ (val);
 avg 
-----
 3.5
(1 row)

SELECT avg(val::zdecimal) FROM (VALUES (999999999999999999.999999999999999999), (-999999999999999999.999999999999999999)) _ (val);
 avg 
-----
 0
(1 row)

CREATE TABLE test_zdecimal (x zdecimal);
CREATE UNIQUE INDEX test_zdecimal1_x_key ON test_zdecimal USING btree (x);
INSERT INTO test_zdecimal VALUES (-1), (0), (1), (2), (3), (4), (5), (null);
SET enable_seqscan = off;
SET enable_bitmapscan = off;
EXPLAIN (COSTS OFF) SELECT * FROM test_zdecimal WHERE x = 3::zdecimal;
                         QUERY PLAN                          
-------------------------------------------------------------
 Index Only Scan using test_zdecimal1_x_key on test_zdecimal
   Index Cond: (x = '3'::zdecimal)
(2 rows)

SELECT * FROM test_zdecimal WHERE x = 3::zdecimal;
 x 
---
 3
(1 row)

EXPLAIN (COSTS OFF) SELECT * FROM test_zdecimal WHERE x = 3::zdecimal;
                         QUERY PLAN                          
-------------------------------------------------------------
 Index Only Scan using test_zdecimal1_x_key on test_zdecimal
   Index Cond: (x = '3'::zdecimal)
(2 rows)

SELECT * FROM test_zdecimal WHERE x = 3::zdecimal;
 x 
---
 3
(1 row)

DROP TABLE test_zdecimal;
RESET enable_seqscan;
RESET enable_bitmapscan;
SELECT '1'::zdecimal < '1'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '5'::zdecimal < '2'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '3'::zdecimal < '4'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '1'::zdecimal <= '1'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '5'::zdecimal <= '2'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '3'::zdecimal <= '4'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '1'::zdecimal = '1'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '5'::zdecimal = '2'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '3'::zdecimal = '4'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '1'::zdecimal <> '1'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '5'::zdecimal <> '2'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '3'::zdecimal <> '4'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '1'::zdecimal >= '1'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '5'::zdecimal >= '2'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '3'::zdecimal >= '4'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '1'::zdecimal > '1'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT '5'::zdecimal > '2'::zdecimal;
 ?column? 
----------
 t
(1 row)

SELECT '3'::zdecimal > '4'::zdecimal;
 ?column? 
----------
 f
(1 row)

SELECT zdecimal_cmp('1'::zdecimal, '1'::zdecimal);
 zdecimal_cmp 
--------------
            0
(1 row)

SELECT zdecimal_cmp('5'::zdecimal, '2'::zdecimal);
 zdecimal_cmp 
--------------
            1
(1 row)

SELECT zdecimal_cmp('3'::zdecimal, '4'::zdecimal);
 zdecimal_cmp 
--------------
           -1
(1 row)

SELECT pg_typeof('1'::zdecimal + '1'::zdecimal);
 pg_typeof 
-----------
 zdecimal
(1 row)

SELECT '1'::zdecimal + '1'::zdecimal;
 ?column? 
----------
 2
(1 row)

SELECT '3'::zdecimal + '4'::zdecimal;
 ?column? 
----------
 7
(1 row)

SELECT '5'::zdecimal + '2'::zdecimal;
 ?column? 
----------
 7
(1 row)

SELECT '-3'::zdecimal + '4'::zdecimal;
 ?column? 
----------
 1
(1 row)

SELECT '-5'::zdecimal + '2'::zdecimal;
 ?column? 
----------
 -3
(1 row)

SELECT '3'::zdecimal + '-4'::zdecimal;
 ?column? 
----------
 -1
(1 row)

SELECT '5'::zdecimal + '-2'::zdecimal;
 ?column? 
----------
 3
(1 row)

SELECT '127'::zdecimal + '127'::zdecimal;
 ?column? 
----------
 254
(1 row)

SELECT pg_typeof('1'::zdecimal - '1'::zdecimal);
 pg_typeof 
-----------
 zdecimal
(1 row)

SELECT '1'::zdecimal - '1'::zdecimal;
 ?column? 
----------
 0
(1 row)

SELECT '3'::zdecimal - '4'::zdecimal;
 ?column? 
----------
 -1
(1 row)

SELECT '5'::zdecimal - '2'::zdecimal;
 ?column? 
----------
 3
(1 row)

SELECT '-3'::zdecimal - '4'::zdecimal;
 ?column? 
----------
 -7
(1 row)

SELECT '-5'::zdecimal - '2'::zdecimal;
 ?column? 
----------
 -7
(1 row)

SELECT '3'::zdecimal - '-4'::zdecimal;
 ?column? 
----------
 7
(1 row)

SELECT '5'::zdecimal - '-2'::zdecimal;
 ?column? 
----------
 7
(1 row)

SELECT pg_typeof('1'::zdecimal * '1'::zdecimal);
 pg_typeof 
-----------
 zdecimal
(1 row)

SELECT '1'::zdecimal * '1'::zdecimal;
 ?column? 
----------
 1
(1 row)

SELECT '3'::zdecimal * '4'::zdecimal;
 ?column? 
----------
 12
(1 row)

SELECT '5'::zdecimal * '2'::zdecimal;
 ?column? 
----------
 10
(1 row)

SELECT '-3'::zdecimal * '4'::zdecimal;
 ?column? 
----------
 -12
(1 row)

SELECT '-5'::zdecimal * '2'::zdecimal;
 ?column? 
----------
 -10
(1 row)

SELECT '3'::zdecimal * '-4'::zdecimal;
 ?column? 
----------
 -12
(1 row)

SELECT '5'::zdecimal * '-2'::zdecimal;
 ?column? 
----------
 -10
(1 row)

SELECT '127'::zdecimal * '127'::zdecimal;
 ?column? 
----------
 16129
(1 row)

SELECT pg_typeof('1'::zdecimal / '1'::zdecimal);
 pg_typeof 
-----------
 zdecimal
(1 row)

SELECT '1'::zdecimal / '1'::zdecimal;
 ?column? 
----------
 1
(1 row)

SELECT '3'::zdecimal / '4'::zdecimal;
 ?column? 
----------
 0.75
(1 row)

SELECT '5'::zdecimal / '2'::zdecimal;
 ?column? 
----------
 2.5
(1 row)

SELECT '-3'::zdecimal / '4'::zdecimal;
 ?column? 
----------
 -0.75
(1 row)

SELECT '-5'::zdecimal / '2'::zdecimal;
 ?column? 
----------
 -2.5
(1 row)

SELECT '3'::zdecimal / '-4'::zdecimal;
 ?column? 
----------
 -0.75
(1 row)

SELECT '5'::zdecimal / '-2'::zdecimal;
 ?column? 
----------
 -2.5
(1 row)

SELECT '5'::zdecimal / '0'::zdecimal;
ERROR:  value out of range: overflow
SELECT CAST('42.01'::zdecimal AS int8);
 int8 
------
   42
(1 row)

SELECT CAST('-42.01'::zdecimal AS int8);
 int8 
------
  -42
(1 row)

SELECT CAST('42.01'::zdecimal AS double precision);
 float8 
--------
  42.01
(1 row)

SELECT CAST('-42.01'::zdecimal AS double precision);
 float8 
--------
 -42.01
(1 row)

SELECT CAST('42.01'::zdecimal AS numeric);
 numeric 
---------
   42.01
(1 row)

SELECT CAST('-42.01'::zdecimal AS numeric);
 numeric 
---------
  -42.01
(1 row)

SELECT zdecimal_hash(42.01);
ERROR:  function zdecimal_hash(numeric) does not exist
LINE 1: SELECT zdecimal_hash(42.01);
               ^
HINT:  No function matches the given name and argument types. You might need to add explicit type casts.
SELECT zdecimal_hash(42.01::zdecimal);
 zdecimal_hash 
---------------
    -433520640
(1 row)

